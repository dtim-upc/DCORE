@article{core,
  author    = {Marco Bucchi and
               Alejandro Grez and
               Andr{\'{e}}s Quintana and
               Cristian Riveros and
               Stijn Vansummeren},
  title     = {{CORE:} a COmplex event Recognition Engine},
  journal   = {CoRR},
  volume    = {abs/2111.04635},
  year      = {2021},
  url       = {https://arxiv.org/abs/2111.04635},
  eprinttype = {arXiv},
  eprint    = {2111.04635},
  timestamp = {Wed, 10 Nov 2021 16:07:30 +0100},
  biburl    = {https://dblp.org/rec/journals/corr/abs-2111-04635.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@InProceedings{formal-framework-cep,
  author =  {Alejandro Grez and Cristian Riveros and Mart{\'i}n Ugarte},
  title =   {{A Formal Framework for Complex Event Processing}},
  booktitle =   {22nd International Conference on Database Theory (ICDT 2019)},
  pages =   {5:1--5:18},
  series =  {Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN =  {978-3-95977-101-6},
  ISSN =  {1868-8969},
  year =  {2019},
  volume =  {127},
  editor =  {Pablo Barcelo and Marco Calautti},
  publisher =   {Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address =   {Dagstuhl, Germany},
  URL =     {http://drops.dagstuhl.de/opus/volltexte/2019/10307},
  doi =  {10.4230/LIPIcs.ICDT.2019.5},
  annote = {Keywords: Complex event processing, streaming evaluation, constant delay enumeration}
}

@article{formal-framework-cer,
  author    = {Alejandro Grez and
               Cristian Riveros and
               Mart{\'{\i}}n Ugarte and
               Stijn Vansummeren},
  title     = {A Formal Framework for Complex Event Recognition},
  journal   = {{ACM} Trans. Database Syst.},
  volume    = {46},
  number    = {4},
  pages     = {16:1--16:49},
  year      = {2021},
  url       = {https://doi.org/10.1145/3485463},
  doi       = {10.1145/3485463},
  timestamp = {Fri, 17 Dec 2021 17:23:43 +0100},
  biburl    = {https://dblp.org/rec/journals/tods/GrezRUV21.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@InProceedings{on-the-expressiveness,
  author =  {Alejandro Grez and Cristian Riveros and Mart{\'\i}n Ugarte and Stijn Vansummeren},
  title =   {{On the Expressiveness of Languages for Complex Event Recognition}},
  booktitle =   {23rd International Conference on Database Theory (ICDT 2020)},
  pages =   {15:1--15:17},
  series =  {Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN =  {978-3-95977-139-9},
  ISSN =  {1868-8969},
  year =  {2020},
  volume =  {155},
  editor =  {Carsten Lutz and Jean Christoph Jung},
  publisher =   {Schloss Dagstuhl--Leibniz-Zentrum f{\"u}r Informatik},
  address =   {Dagstuhl, Germany},
  URL =     {https://drops.dagstuhl.de/opus/volltexte/2020/11939},
  URN =     {urn:nbn:de:0030-drops-119390},
  doi =     {10.4230/LIPIcs.ICDT.2020.15},
  annote =  {Keywords: Query languages, Complex Event Recognition, Logics, Automata theory}
}

@InProceedings{constant-delay-1,
    author = {Luc Segoufin},
    title = {Enumerating with constant delay the answers to a query},
    booktitle = {In Intl. Conf. on Database Theory},
    year = {2013},
    pages = {10--20}
}

@InProceedings{constant-delay-2,
  author="Bagan, Guillaume
  and Durand, Arnaud
  and Grandjean, Etienne",
  editor="Duparc, Jacques
  and Henzinger, Thomas A.",
  title="On Acyclic Conjunctive Queries and Constant Delay Enumeration",
  booktitle="Computer Science Logic",
  year="2007",
  publisher="Springer Berlin Heidelberg",
  address="Berlin, Heidelberg",
  pages="208--222",
  abstract="We study the enumeration complexity of the natural extension of acyclic conjunctive queries with disequalities. In this language, a number of NP-complete problems can be expressed. We first improve a previous result of Papadimitriou and Yannakakis by proving that such queries can be computed in time {\$}c.|{\backslash}cal M|.|{\backslash}varphi({\backslash}cal M)|{\$}where {\$}{\backslash}cal M{\$}is the structure, {\$}{\backslash}varphi({\backslash}cal M){\$}is the result set of the query and c is a simple exponential in the size of the formula ϕ. A consequence of our method is that, in the general case, tuples of such queries can be enumerated with a linear delay between two tuples.",
  isbn="978-3-540-74915-8"
}

@Article{selection-strategies-literature-1,
  author = {Carlson, Jan and Lisper, Bj\"{o}rn},
  title = {A Resource-Efficient Event Algebra},
  year = {2010},
  issue_date = {December, 2010},
  publisher = {Elsevier North-Holland, Inc.},
  address = {USA},
  volume = {75},
  number = {12},
  issn = {0167-6423},
  url = {https://doi.org/10.1016/j.scico.2010.06.010},
  doi = {10.1016/j.scico.2010.06.010},
  abstract = {Events play many roles in computer systems, ranging from hardware interrupts, over event-based software architecture, to monitoring and managing of complex systems. In many applications, however, individual event occurrences are not the main point of concern, but rather the occurrences of certain event patterns. Such event patterns can be defined by means of an event algebra, i.e., expressions representing the patterns of interest are built from simple events and operators such as disjunction, sequence, etc. We propose a novel event algebra with intuitive operators (a claim which is supported by a number of algebraic properties). We also present an efficient detection algorithm that correctly detects any expression with bounded memory, which makes this algebra particularly suitable for resource-constrained applications such as embedded systems.},
  journal = {Sci. Comput. Program.},
  month = {dec},
  pages = {1215–1234},
  numpages = {20},
  keywords = {Event notification, Event detection, Embedded systems}
}

@InProceedings{selection-strategies-literature-2,
  author = {Wu, Eugene and Diao, Yanlei and Rizvi, Shariq},
  title = {High-Performance Complex Event Processing over Streams},
  year = {2006},
  isbn = {1595934340},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/1142473.1142520},
  doi = {10.1145/1142473.1142520},
  abstract = {In this paper, we present the design, implementation, and evaluation of a system that executes complex event queries over real-time streams of RFID readings encoded as events. These complex event queries filter and correlate events to match specific patterns, and transform the relevant events into new composite events for the use of external monitoring applications. Stream-based execution of these queries enables time-critical actions to be taken in environments such as supply chain management, surveillance and facility management, healthcare, etc. We first propose a complex event language that significantly extends existing event languages to meet the needs of a range of RFID-enabled monitoring applications. We then describe a query plan-based approach to efficiently implementing this language. Our approach uses native operators to efficiently handle query-defined sequences, which are a key component of complex event processing, and pipeline such sequences to subsequent operators that are built by leveraging relational techniques. We also develop a large suite of optimization techniques to address challenges such as large sliding windows and intermediate result sizes. We demonstrate the effectiveness of our approach through a detailed performance analysis of our prototype implementation under a range of data and query workloads as well as through a comparison to a state-of-the-art stream processor.},
  booktitle = {Proceedings of the 2006 ACM SIGMOD International Conference on Management of Data},
  pages = {407–418},
  numpages = {12},
  keywords = {sequences, complex event language, RFID, query optimization, streams, events},
  location = {Chicago, IL, USA},
  series = {SIGMOD '06}
}

@Article{selection-strategies-literature-3,
  title={On complexity and optimization of expensive queries in complex event processing},
  author={Haopeng Zhang and Yanlei Diao and Neil Immerman},
  journal={Proceedings of the 2014 ACM SIGMOD International Conference on Management of Data},
  year={2014}
}

@InProceedings{data-complexity,
  author = {Vardi, Moshe},
  year = {1982},
  month = {01},
  pages = {137-146},
  title = {The Complexity of Relational Query Languages (Extended Abstract)},
  doi = {10.1145/800070.802186}
}

@InProceedings{skip-till-any-match,
  Author = {Agrawal, Jagrati and Diao, Yanlei and Gyllstrom, Daniel and Immerman, Neil},
  Title = {Efficient Pattern Matching over Event Streams},
  Year = {2008},
  Isbn = {9781605581026},
  Publisher = {Association for Computing Machinery},
  Address = {New York, NY, USA},
  Url = {https://doi.org/10.1145/1376616.1376634},
  Doi = {10.1145/1376616.1376634},
  Abstract = {Pattern matching over event streams is increasingly being employed in many areas including financial services, RFIDbased inventory management, click stream analysis, and electronic health systems. While regular expression matching is well studied, pattern matching over streams presents two new challenges: Languages for pattern matching over streams are significantly richer than languages for regular expression matching. Furthermore, efficient evaluation of these pattern queries over streams requires new algorithms and optimizations: the conventional wisdom for stream query processing (i.e., using selection-join-aggregation) is inadequate.In this paper, we present a formal evaluation model that offers precise semantics for this new class of queries and a query evaluation framework permitting optimizations in a principled way. We further analyze the runtime complexity of query evaluation using this model and develop a suite of techniques that improve runtime efficiency by exploiting sharing in storage and processing. Our experimental results provide insights into the various factors on runtime performance and demonstrate the significant performance gains of our sharing techniques.},
  Booktitle = {Proceedings of the 2008 ACM SIGMOD International Conference on Management of Data},
  Pages = {147–160},
  Numpages = {14},
  Keywords = {query optimization, event streams, pattern matching},
  Location = {Vancouver, Canada},
  Series = {SIGMOD '08}
}

@Book{distributed-computing-book,
  Title     = {Distributed Computing: Principles, Algorithms, and Systems},
  Author    = {Ajay D. Kshemkalyani and Mukesh Singhal},
  Year      = {2011},
  Month     = {March},
  Publisher = {Cambridge University Press},
  Pages     = {756},
  Url       = {https://www.cs.uic.edu/~ajayk/DCS-Book},
  ISBN      = {9780521189842},
}

@misc{maritime-monitoring,
      title={Composite Event Recognition for Maritime Monitoring},
      author={Manolis Pitsikalis and Alexander Artikis and Richard Dreo and Cyril Ray and Elena Camossi and Anne-Laure Jousselme},
      year={2019},
      eprint={1903.03078},
      archivePrefix={arXiv},
      primaryClass={cs.AI}
}


@ARTICLE{intrusion-detection,
  author={Mukherjee, B. and Heberlein, L.T. and Levitt, K.N.},
  journal={IEEE Network},
  title={Network intrusion detection},
  year={1994},
  volume={8},
  number={3},
  pages={26-41},
  doi={10.1109/65.283931}
}

@article{industrial-control,
  author    = {Tibor V{\'{a}}mos},
  title     = {Automation production systems and computer integrated manufacturing:
               Mikell P. Groover},
  journal   = {Autom.},
  volume    = {24},
  number    = {4},
  pages     = {587},
  year      = {1988},
  url       = {https://doi.org/10.1016/0005-1098(88)90106-9},
  doi       = {10.1016/0005-1098(88)90106-9},
  timestamp = {Thu, 20 Feb 2020 09:13:34 +0100},
  biburl    = {https://dblp.org/rec/journals/automatica/Vamos88a.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{real-time-analytics,
  author    = {B. S. Sahay and Jayanthi Ranjan},
  title     = {Real time business intelligence in supply chain analytics},
  journal   = {Inf. Manag. Comput. Secur.},
  volume    = {16},
  number    = {1},
  pages     = {28--48},
  year      = {2008},
  url       = {https://doi.org/10.1108/09685220810862733},
  doi       = {10.1108/09685220810862733},
  timestamp = {Sun, 25 Jul 2021 11:36:37 +0200},
  biburl    = {https://dblp.org/rec/journals/imcs/SahayR08.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{flink,
  author    = {Paris Carbone and Asterios Katsifodimos and Stephan Ewen and Volker Markl and Seif Haridi and Kostas Tzoumas},
  title     = {Apache Flink{\texttrademark}: Stream and Batch Processing in a Single Engine},
  journal   = {{IEEE} Data Eng. Bull.},
  volume    = {38},
  number    = {4},
  pages     = {28--38},
  year      = {2015},
  url       = {http://sites.computer.org/debull/A15dec/p28.pdf},
  timestamp = {Tue, 10 Mar 2020 16:23:50 +0100},
  biburl    = {https://dblp.org/rec/journals/debu/CarboneKEMHT15.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{spark,
  author    = {Michael Armbrust and
               Tathagata Das and
               Joseph Torres and
               Burak Yavuz and
               Shixiong Zhu and
               Reynold Xin and
               Ali Ghodsi and
               Ion Stoica and
               Matei Zaharia},
  editor    = {Gautam Das and
               Christopher M. Jermaine and
               Philip A. Bernstein},
  title     = {Structured Streaming: {A} Declarative {API} for Real-Time Applications
               in Apache Spark},
  booktitle = {Proceedings of the 2018 International Conference on Management of
               Data, {SIGMOD} Conference 2018, Houston, TX, USA, June 10-15, 2018},
  pages     = {601--613},
  publisher = {{ACM}},
  year      = {2018},
  url       = {https://doi.org/10.1145/3183713.3190664},
  doi       = {10.1145/3183713.3190664},
  timestamp = {Wed, 21 Nov 2018 12:44:08 +0100},
  biburl    = {https://dblp.org/rec/conf/sigmod/ArmbrustDTYZX0S18.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{sase,
  title={High-performance complex event processing over streams},
  author={Eugene Wu and Yanlei Diao and Shariq J. Rizvi},
  journal={Proceedings of the 2006 ACM SIGMOD international conference on Management of data},
  year={2006}
}

@misc{espertech,
  title={Complex event processing, streaming analytics, streaming SQL},
  url={https://www.espertech.com/},
  journal={EsperTech},
  year={2021},
  month={Jan}
}

@INPROCEEDINGS{caguya,
    author = {Alan Demers and Johannes Gehrke and Mingsheng Hong and Mirek Riedewald and Walker White},
    title = {Towards expressive publish/subscribe systems},
    booktitle = {In Proceedings of the International Conference on Extending Database Technology},
    year = {2006},
    pages = {627--644}
}

@inproceedings{tesla,
  author    = {Gianpaolo Cugola and
               Alessandro Margara},
  editor    = {Jean Bacon and
               Peter R. Pietzuch and
               Joe Sventek and
               Ugur {\c{C}}etintemel},
  title     = {{TESLA:} a formally defined event specification language},
  booktitle = {Proceedings of the Fourth {ACM} International Conference on Distributed
               Event-Based Systems, {DEBS} 2010, Cambridge, United Kingdom, July
               12-15, 2010},
  pages     = {50--61},
  publisher = {{ACM}},
  year      = {2010},
  url       = {https://doi.org/10.1145/1827418.1827427},
  doi       = {10.1145/1827418.1827427},
  timestamp = {Tue, 06 Nov 2018 11:07:34 +0100},
  biburl    = {https://dblp.org/rec/conf/debs/CugolaM10.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{survey-systems-1,
author = {Giatrakos, Nikos and Artikis, Alexander and Deligiannakis, Antonios and Garofalakis, Minos},
title = {Complex Event Recognition in the Big Data Era: A Survey},
year = {2017},
issue_date = {August 2017},
publisher = {VLDB Endowment},
volume = {10},
number = {12},
issn = {2150-8097},
url = {https://doi.org/10.14778/3137765.3137829},
doi = {10.14778/3137765.3137829},
abstract = {The concept of event processing is established as a generic computational paradigm in various application fields, ranging from data processing in Web environments, over maritime and transport, to finance and medicine. Events report on state changes of a system and its environment. Complex Event Recognition (CER) in turn, refers to the identification of complex/composite events of interest, which are collections of simple events that satisfy some pattern, thereby providing the opportunity for reactive and proactive measures. Examples include the recognition of attacks in computer network nodes, human activities on video content, emerging stories and trends on the Social Web, traffic and transport incidents in smart cities, fraud in electronic marketplaces, cardiac arrhythmias, and epidemic spread. In each scenario, CER allows to make sense of Big event Data streams and react accordingly. The goal of this tutorial is to provide a step-by-step guide for realizing CER in the Big Data era. To do so, it elaborates on major challenges and describes algorithmic toolkits for optimized manipulation of event streams characterized by high volume, velocity and/or lack of veracity, placing emphasis on distributed CER over potentially heterogeneous (data variety) event sources. Finally, we highlight future research directions in the field.},
journal = {Proc. VLDB Endow.},
month = {aug},
pages = {1996–1999},
numpages = {4}
}

@article{survey-systems-2,
author = {Alevizos, Elias and Skarlatidis, Anastasios and Artikis, Alexander and Paliouras, Georgios},
title = {Probabilistic Complex Event Recognition: A Survey},
year = {2017},
issue_date = {September 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {50},
number = {5},
issn = {0360-0300},
url = {https://doi.org/10.1145/3117809},
doi = {10.1145/3117809},
abstract = {Complex event recognition (CER) applications exhibit various types of uncertainty, ranging from incomplete and erroneous data streams to imperfect complex event patterns. We review CER techniques that handle, to some extent, uncertainty. We examine techniques based on automata, probabilistic graphical models, and first-order logic, which are the most common ones, and approaches based on Petri nets and grammars, which are less frequently used. Several limitations are identified with respect to the employed languages, their probabilistic models, and their performance, as compared to the purely deterministic cases. Based on those limitations, we highlight promising directions for future work.},
journal = {ACM Comput. Surv.},
month = {sep},
articleno = {71},
numpages = {31},
keywords = {probabilistic graphical models, probabilistic automata, probabilistic Petri nets, Event processing, uncertainty, stochastic grammars, probabilistic logics}
}
